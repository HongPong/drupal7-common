<?php

/**
 * Implements hook_init().
 */
function tpc_general_init() {
  drupal_add_js(drupal_get_path('module', 'tpc_general') . '/tpc_general.js');
  drupal_add_css(drupal_get_path('module', 'tpc_general') . '/tpc_general.css');
}

/**
 * Implements hook_menu().
 */
function tpc_general_menu() {
  $items = array(
    'google77fb9b8c2bc767f8.html' => array(
      'title' => 'Google Webmaster Tools verification file',
      'page callback' => 'tpc_general_gwt_verification',
      'page arguments' => array('google77fb9b8c2bc767f8'),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ),
    'googled8b6d4569de16b0f.html' => array(
      'title' => 'Google Webmaster Tools verification file',
      'page callback' => 'tpc_general_gwt_verification',
      'page arguments' => array('googled8b6d4569de16b0f'),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ),
    'BingSiteAuth.xml' => array(
      'title' => 'Bing Webmaster verification file',
      'page callback' => 'tpc_general_bing_verification',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ),
  );
  return $items;
}

/**
 * Output the Google Webmaster Tools verification string for TPC's account.
 */
function tpc_general_gwt_verification($id) {
  echo "google-site-verification: $id.html";
}

/**
 * Output the Bing Webmaster verification string for TPC's account.
 */
function tpc_general_bing_verification() {
  drupal_add_http_header('Content-Type', 'application/xml');
  echo '<?xml version="1.0"?>
<users>
        <user>4DC24E4DF802F9070802BE81B10F6C08</user>
</users>';
}

/**
 * Implements hook_form_alter().
 *
 * Expose the body summary sub-field by default on node edit forms.
 */
function tpc_general_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['#node_edit_form'])) {
    drupal_add_js('jQuery(function(){jQuery(".link-edit-summary").click();});', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Use body summary for META description tag, if available.
 */
function tpc_general_preprocess_node(&$vars) {
  // Only do this when viewing single nodes; hence checking arg(0).
  if (arg(0) == 'node' && !empty($vars['body'][0]['summary'])) {
    $description = array(
      '#tag' => 'meta',
      '#attributes' => array(
        'description' => check_plain($vars['body'][0]['summary']),
      ),
    );
    drupal_add_html_head($description, 'tpc_general_meta_description');
  }  
}

/**
 * Implements hook_field_formatter_info().
 *
 * Add a text formatter similar to plain text, but with HTML line breaks.
 */
function tpc_general_field_formatter_info() {
  return array(
    'text_plain_linebreaks' => array(
      'label' => t('Plain text with linebreaks'),
      'field types' => array('text_long', 'text_with_summary'),
    ),
  );
}

function tpc_general_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'text_plain_linebreaks':
      foreach ($items as $delta => $item) {
        $element[$delta] = array('#markup' => nl2br(strip_tags($item['value'])));
      }
      break;
  }
  return $element;
}
  
/**
 * Implements hook_menu_breadcrumb_alter().
 *
 * If in the admin section, change the breadcrumb root to "Dashboard" instead
 * of "Home".
 */
function tpc_general_menu_breadcrumb_alter(&$active_trail, $item) {
  if (in_array('admin', $item['original_map'])) {
    $active_trail[0]['title'] = t('Dashboard');
    $active_trail[0]['href'] = 'admin/dashboard';
  }
}

/**
 * Display the relative filepath for file fields.
 */
function tpc_general_preprocess_file_widget_multiple(&$vars) {
  foreach(element_children($vars['element']) AS $key) {
    if (!empty($vars['element'][$key]['#default_value']['uri'])) {
      $file_public_path = '/' . variable_get('file_public_path', 'sites/default/files') . '/';
      $relative = str_replace('public://', $file_public_path, $vars['element'][$key]['#default_value']['uri']);
      $vars['element'][$key]['filename']['#suffix'] = '<div class="file-relative-path">' . $relative . '</div>';
    }
  }
}

/**
 * Implements hook_views_api().
 */
function tpc_general_views_api() {
  return array(
    'api' => '3',
  );
}
